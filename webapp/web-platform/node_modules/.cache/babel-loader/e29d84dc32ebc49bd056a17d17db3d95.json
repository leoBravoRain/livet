{"ast":null,"code":"var _jsxFileName = \"/home/leo/Desktop/livet/webapp/web-platform/src/screens/login/login.screen.js\";\n// import React from \"react\";\n// // import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// // material ui\n// import Paper from '@material-ui/core/Paper';\n// import Container from '@material-ui/core/Container';\n// import { Button } from \"@material-ui/core\";\n// import Typography from '@material-ui/core/Typography';\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// import LiveTv from '@material-ui/icons/LiveTv';\n// // firebase\n// // import { auth } from \"../../config/firebase\";\n// // import { fs } from \"../../config/firebase\";\n// // // workshop mockup\n// // const _workshops = [\n// //     {\n// //         \"title\": \"Yoga indio\",\n// //         \"teacher\": \"Daniela Parra\",\n// //         \"description\": \"Unete a nuestras clases de yoga, para hacer ejercicios y sacarte el estrés que tienes dentro\",\n// //         \"image\": \"https://images.yogaanytime.com/2017/12/13/large_sarah_170825_YA13140_content-19948.jpg?width=768\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Deportes\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     },\n// //     {\n// //         \"title\": \"Baile entretenido\",\n// //         \"teacher\": \"Rodrigo Días\",\n// //         \"description\": \"Unete a nuestras clases unicas de baile entretenido\",\n// //         \"image\": \"https://statics-cuidateplus.marca.com/sites/default/files/images/zumba.jpg\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Deportes\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     },\n// //     {\n// //         \"title\": \"Clases de guitarra\",\n// //         \"teacher\": \"Rodrigo Valencia\",\n// //         \"description\": \"Unete a nuestras clases unicas de guitarra\",\n// //         \"image\": \"https://img.fotocommunity.com/guitar-man-ff55a084-e878-4372-a9a0-ee771a3a0fdc.jpg?height=1080\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Musica\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     }\n// // ];\n// class Login extends React.Component {\n//     // constructor\n//     constructor(props) {\n//         // constructur of parent\n//         super(props);\n//         // initial states\n//         this.state = {\n//             loading: false,\n//             // workshopsByCategory: null,\n//             // email: \"\",\n//             // password: \"\",\n//         }\n//     }\n//     // componentDidMount() {\n//     //     // courses by category\n//     //     var coursesByCategory = {};\n//     //     // get courses\n//     //     // get teachers courses\n//     //     fs.collection('workshops')\n//     //         // .where(\"author_ID\", \"==\", user.uid)\n//     //         .get()\n//     //         .then(querySnapshot => {\n//     //             var workshops = [];\n//     //             querySnapshot.docs.forEach(doc => {\n//     //                 const workshop = doc.data();\n//     //                 // if category is already registered\n//     //                 if (workshop.category in coursesByCategory) {\n//     //                     var tmp = coursesByCategory[workshop.category];\n//     //                     tmp.push(workshop);\n//     //                     coursesByCategory[workshop.category] = tmp;\n//     //                 }\n//     //                 // if it is not\n//     //                 else {\n//     //                     coursesByCategory[workshop.category] = [workshop];\n//     //                 }\n//     //             });\n//     //             this.setState({\n//     //                 workshopsByCategory: coursesByCategory,\n//     //                 loading: false,\n//     //             });\n//     //         })\n//     //         .catch(e => {\n//     //             // console.log(\"(createNewCourse) error trying to get the courses: \" + e);\n//     //             this.setState({ loading: false });\n//     //         });\n//     // }\n//     render() {\n//         // return method\n//         return (\n//             <Container\n//                 style={{\n//                     // margin: 20,\n//                     // padding: 20,\n//                     // backgroundColor: \"red\",\n//                 }}\n//             >\n//                 {\n//                     !this.state.loading\n//                         ?\n//                         <Container>\n//                             {/* title */}\n//                             <Paper\n//                                 style={{\n//                                     margin: 15,\n//                                     padding: 5,\n//                                 }}\n//                                 elevation={5}\n//                             >   \n//                                 {/* title */}\n//                                 <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n//                                     {/* <LiveTv style = {{margin: 5}} />  */}\n//                                     Entrar a Livet\n//                                 </Typography>\n//                                 {/* enter user name */}\n//                             </Paper>\n//                         </Container>\n//                         :\n//                         <CircularProgress />\n//                 }\n//             </Container>\n//         );\n//     }\n// }\n// export default Login;\nimport React, { Component } from 'react';\nimport { Alert // // Platform,\n, StyleSheet // Button,\n// Text,\n, View // Image,\n// ProgressBarAndroid,\n// FlatList,\n, ImageBackground // TouchableOpacity\n, PermissionsAndroid } from 'react-native'; // import {\n//     Input,\n//     Button\n// } from 'react-native-elements';\n\nimport { Button // Card, \n, Title // Paragraph,\n, ActivityIndicator, TextInput // Appbar,\n// Text,\n} from 'react-native-paper';\nimport { withNavigation // NavigationActions,\n// StackActions,\n} from 'react-navigation';\nimport auth from '@react-native-firebase/auth'; // import firestore from '@react-native-firebase/firestore';\n// import messaging from '@react-native-firebase/messaging';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function request_record_permission() {\n  try {\n    const granted = await PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO, {\n      title: 'Permission to record audio',\n      message: 'In order to practice speaking, you have to use the microphone',\n      buttonNegative: 'Cancel',\n      buttonPositive: 'Ok'\n    });\n\n    if (granted === PermissionsAndroid.RESULTS.GRANTED) {//////console.log.log.log.log('You can use the camera');\n    } else {\n      //////console.log.log.log.log('Camera permission denied');\n      // Works on both iOS and Android\n      Alert.alert('Sorry', 'You can not use the microphone to practice your speaking skills', [{\n        text: 'Ok'\n      }], {\n        cancelable: false\n      });\n    }\n  } catch (err) {//////console.log.log.log.warn(err);\n  }\n}\n\nrequest_record_permission();\n\nclass Login extends Component {\n  // Options for header bar\n  //Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_email: null,\n      password: null,\n      // user_email: \"leo.bravo.rain@gmail.com\",\n      // password: \"123456\",\n      // user_email: \"1andreatapiasalinas@gmail.com\",\n      // password: \"123123\",\n      loading: false\n    };\n    this.login = this.login.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  componentDidMount() {\n    // // check notifications permmissions\n    // messaging().hasPermission()\n    //     .then(enabled => {\n    //         if (enabled) {\n    //             alert('Yes')\n    //         } else {\n    //             alert('No')\n    //         }\n    //     });\n    // check authentication\n    auth().onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        // update state\n        this.setState({\n          loading: true\n        }); // navigate to user home screen\n\n        this.props.navigation.push(\"Home_Student\"); // // it gets the fcmToken from the Firebase SDK,\n        // messaging().getToken()\n        //     .then(fcmToken => {\n        //         if (fcmToken) {\n        //             // user has a device token\n        //             // //////console.log.log.log.log(\"it has token\");\n        //             // alert(fcmToken);\n        //             //////console.log.log.log.log(\"Token: \", fcmToken);\n        //             // update token of user\n        //             firestore().collection('users').doc(user.uid).update({ \n        //                     fcm_token: fcmToken,\n        //                 })       \n        //                 // if ok\n        //                 .then(response => {\n        //                     //////console.log.log.log.log(\"Update user fcm token\");\n        //                     // navigate to home screen\n        //                     this.props.navigation.push(\"Choose_Contact\");\n        //                 })\n        //                 // if error\n        //                 .catch((error) => {\n        //                     // user message\n        //                     Alert.alert(\n        //                         'Sorry!',\n        //                         'We had a problem, try to open the app again!',\n        //                         [\n        //                             { text: 'I will do it' },\n        //                         ],\n        //                         { cancelable: false },\n        //                     );\n        //                     // dislpay error in //////console.log.log.log\n        //                     //////console.log.log.log.log(error);\n        //                 });\n        //         } else {\n        //             // user doesn't have a device token yet\n        //             //////console.log.log.log.log(\"it has not token\");\n        //             // // it has not token\n        //             // alert(\"It has not token!\");\n        //             // user message\n        //             Alert.alert(\n        //                 'Sorry!',\n        //                 'We had a problem, try to open the app again!',\n        //                 [\n        //                     { text: 'I will do it' },\n        //                 ],\n        //                 { cancelable: false },\n        //             );\n        //             // update state\n        //             this.setState({\n        //                 loading: false,\n        //             });\n        //         }\n        //     })\n        //     .catch(error => {\n        //         //////console.log.log.log.log(\"error in user authentication: \", error);\n        //         // update state\n        //         this.setState({\n        //             loading: false,\n        //         });\n        //     })\n      }\n    });\n  }\n\n  login() {\n    //////console.log.log.log.log(\"login\");\n    // validate if data is not empty\n    if (this.validate_data_is_not_empty()) {\n      this.setState({\n        loading: true\n      }); // //////console.log.log.log.log(this);\n\n      auth().signInWithEmailAndPassword(this.state.user_email.trim(), this.state.password).then(res => {\n        //////console.log.log.log.log(\"user logged!\");\n        // update state\n        this.setState({\n          loading: false\n        }); // navigate to home screen\n\n        this.props.navigation.push(\"Home_Student\");\n      }).catch(error => {\n        // update state\n        this.setState({\n          loading: false\n        }); // Works on both iOS and Android\n\n        Alert.alert('Ups!', 'The email or password appears to be incorrect. Please try again.', [{\n          text: 'I will try again'\n        }], {\n          cancelable: false\n        });\n      });\n    } else {\n      // Works on both iOS and Android\n      Alert.alert('Information is missing', 'It seems you have not entered all the information', [{\n        text: 'I will try again',\n        onPress: () => {}\n      }], {\n        cancelable: false\n      });\n    }\n  }\n\n  register() {\n    //////console.log.log.log.log(\"register\");\n    this.props.navigation.push(\"Register\");\n  }\n\n  validate_data_is_not_empty() {\n    if (this.state.user_email == null || this.state.password == null) {\n      return false;\n    }\n\n    return true;\n  } // Render method\n\n\n  render() {\n    const url_image = \"https://wallpaperaccess.com/full/180132.jpg\"; // return method\n\n    return /*#__PURE__*/_jsxDEV(ImageBackground, {\n      source: {\n        uri: url_image\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          // display: \"flex\",\n          // flex: 1,\n          // justifyContent: 'center',\n          // alignItems: 'center'\n          flex: 1,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          // backgroundColor: \"red\",\n          width: \"100%\"\n        },\n        children: !this.state.loading ? /*#__PURE__*/_jsxDEV(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            // backgroundColor: \"orange\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: \"Language courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Email\",\n            autoCapitalize: \"none\",\n            onChangeText: text => this.setState({\n              user_email: text\n            }),\n            value: this.state.user_email,\n            style: styles.item // containerStyle = {{\n            //     // backgroundColor: \"red\",\n            //     width: 200,\n            //     // color: \"white\",\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Password\",\n            onChangeText: text => this.setState({\n              password: text\n            }),\n            autoCapitalize: \"none\",\n            value: this.state.password,\n            type: \"password\",\n            secureTextEntry: true,\n            style: styles.item // containerStyle = {{\n            //     // backgroundColor: \"red\",\n            //     // width: 300,\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            mode: \"contained\" // title = \"Login\"\n            ,\n            onPress: () => this.login(),\n            style: styles.item // buttonStyle={[\n            //     styles.button,\n            //     {\n            //         // backgroundColor: \"red\",\n            //         // display: \"flex\",\n            //         // flex: 1,\n            //         // textAlign: \"center\",\n            //         // height: 80,\n            //         // width: 300,\n            //         // width: \"100%\",\n            //         // justifyContent: 'center',\n            //     }\n            // ]}\n            ,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            mode: \"contained\" // title=\"Sign-up\"\n            ,\n            onPress: () => this.register(),\n            style: styles.item // buttonStyle={[\n            //     styles.button,\n            //     {\n            //         backgroundColor: \"green\",\n            //         // width: 200,\n            //         // height: \"50%\",\n            //         // alignSelf: \"center\"\n            //     }\n            // ]}\n            ,\n            children: \"Sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLogin.navigationOptions = ({\n  navigation\n}) => {\n  return {\n    // title: \"Ingresar\",\n    header: null,\n    //   headerLeft: null,\n    // headerLeft: <Image \n    //       source={require('../assets/images/JEYBLANCO.png')} \n    //       style = {{width: 50, height: 50}}\n    //     />,\n    // headerStyle: {\n    //   backgroundColor: \"#9669AA\",\n    //   fontWeight: 20,\n    // },\n    headerTintColor: 'black' //   headerTitleStyle: {\n    //     fontSize: 30,\n    //     fontFamily: \"Lobster-Regular\"\n    //   },\n\n  };\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    width: \"80%\",\n    margin: 3\n  }\n});\nexport default _c = withNavigation(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/leo/Desktop/livet/webapp/web-platform/src/screens/login/login.screen.js"],"names":["React","Component","Alert","StyleSheet","View","ImageBackground","PermissionsAndroid","Button","Title","ActivityIndicator","TextInput","withNavigation","auth","request_record_permission","granted","request","PERMISSIONS","RECORD_AUDIO","title","message","buttonNegative","buttonPositive","RESULTS","GRANTED","alert","text","cancelable","err","Login","constructor","props","state","user_email","password","loading","login","bind","register","componentDidMount","onAuthStateChanged","user","setState","navigation","push","validate_data_is_not_empty","signInWithEmailAndPassword","trim","then","res","catch","error","onPress","render","url_image","uri","width","height","flex","flexDirection","alignItems","justifyContent","styles","item","navigationOptions","header","headerTintColor","create","margin"],"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","sourcesContent":["// import React from \"react\";\n\n// // import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// // material ui\n// import Paper from '@material-ui/core/Paper';\n// import Container from '@material-ui/core/Container';\n// import { Button } from \"@material-ui/core\";\n// import Typography from '@material-ui/core/Typography';\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// import LiveTv from '@material-ui/icons/LiveTv';\n\n\n// // firebase\n// // import { auth } from \"../../config/firebase\";\n// // import { fs } from \"../../config/firebase\";\n\n// // // workshop mockup\n// // const _workshops = [\n// //     {\n// //         \"title\": \"Yoga indio\",\n// //         \"teacher\": \"Daniela Parra\",\n// //         \"description\": \"Unete a nuestras clases de yoga, para hacer ejercicios y sacarte el estrés que tienes dentro\",\n// //         \"image\": \"https://images.yogaanytime.com/2017/12/13/large_sarah_170825_YA13140_content-19948.jpg?width=768\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Deportes\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     },\n\n// //     {\n// //         \"title\": \"Baile entretenido\",\n// //         \"teacher\": \"Rodrigo Días\",\n// //         \"description\": \"Unete a nuestras clases unicas de baile entretenido\",\n// //         \"image\": \"https://statics-cuidateplus.marca.com/sites/default/files/images/zumba.jpg\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Deportes\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     },\n\n// //     {\n// //         \"title\": \"Clases de guitarra\",\n// //         \"teacher\": \"Rodrigo Valencia\",\n// //         \"description\": \"Unete a nuestras clases unicas de guitarra\",\n// //         \"image\": \"https://img.fotocommunity.com/guitar-man-ff55a084-e878-4372-a9a0-ee771a3a0fdc.jpg?height=1080\",\n// //         \"teacherMobileNumber\": \"+56937827142\",\n// //         \"category\": \"Musica\",\n// //         \"schedule\": [\n// //             \"Lunes 8:00 a 9:30\",\n// //             \"Miercoles 8:00 a 9:30\",\n// //         ]\n// //     }\n\n// // ];\n\n// class Login extends React.Component {\n\n//     // constructor\n//     constructor(props) {\n\n//         // constructur of parent\n//         super(props);\n\n//         // initial states\n//         this.state = {\n//             loading: false,\n//             // workshopsByCategory: null,\n//             // email: \"\",\n//             // password: \"\",\n//         }\n\n//     }\n\n//     // componentDidMount() {\n\n//     //     // courses by category\n//     //     var coursesByCategory = {};\n\n//     //     // get courses\n//     //     // get teachers courses\n//     //     fs.collection('workshops')\n//     //         // .where(\"author_ID\", \"==\", user.uid)\n//     //         .get()\n//     //         .then(querySnapshot => {\n\n//     //             var workshops = [];\n\n//     //             querySnapshot.docs.forEach(doc => {\n\n//     //                 const workshop = doc.data();\n\n//     //                 // if category is already registered\n//     //                 if (workshop.category in coursesByCategory) {\n\n//     //                     var tmp = coursesByCategory[workshop.category];\n//     //                     tmp.push(workshop);\n//     //                     coursesByCategory[workshop.category] = tmp;\n\n//     //                 }\n\n//     //                 // if it is not\n//     //                 else {\n//     //                     coursesByCategory[workshop.category] = [workshop];\n//     //                 }\n\n//     //             });\n\n//     //             this.setState({\n//     //                 workshopsByCategory: coursesByCategory,\n//     //                 loading: false,\n//     //             });\n\n//     //         })\n\n//     //         .catch(e => {\n//     //             // console.log(\"(createNewCourse) error trying to get the courses: \" + e);\n//     //             this.setState({ loading: false });\n//     //         });\n\n//     // }\n\n//     render() {\n\n//         // return method\n//         return (\n\n//             <Container\n//                 style={{\n//                     // margin: 20,\n//                     // padding: 20,\n//                     // backgroundColor: \"red\",\n//                 }}\n//             >\n\n//                 {\n//                     !this.state.loading\n\n//                         ?\n\n//                         <Container>\n\n//                             {/* title */}\n//                             <Paper\n//                                 style={{\n//                                     margin: 15,\n//                                     padding: 5,\n//                                 }}\n\n//                                 elevation={5}\n//                             >   \n\n//                                 {/* title */}\n//                                 <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n\n//                                     {/* <LiveTv style = {{margin: 5}} />  */}\n\n//                                     Entrar a Livet\n\n//                                 </Typography>\n\n//                                 {/* enter user name */}\n\n\n//                             </Paper>\n\n//                         </Container>\n\n//                         :\n\n//                         <CircularProgress />\n\n//                 }\n\n//             </Container>\n//         );\n\n//     }\n\n// }\n\n// export default Login;\n\nimport React, { Component } from 'react';\nimport {\n    Alert,\n    // // Platform,\n    StyleSheet,\n    // Button,\n    // Text,\n    View,\n    // Image,\n    // ProgressBarAndroid,\n    // FlatList,\n    ImageBackground,\n    // TouchableOpacity\n    PermissionsAndroid,\n} from 'react-native';\n// import {\n//     Input,\n//     Button\n// } from 'react-native-elements';\n\nimport {\n    Button,\n    // Card, \n    Title,\n    // Paragraph,\n    ActivityIndicator,\n    TextInput,\n    // Appbar,\n    // Text,\n} from 'react-native-paper';\n\nimport {\n    withNavigation,\n    // NavigationActions,\n    // StackActions,\n} from 'react-navigation';\n\nimport auth from '@react-native-firebase/auth';\n// import firestore from '@react-native-firebase/firestore';\n// import messaging from '@react-native-firebase/messaging';\n\n\nasync function request_record_permission() {\n    try {\n        const granted = await PermissionsAndroid.request(\n            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n            {\n                title: 'Permission to record audio',\n                message:\n                    'In order to practice speaking, you have to use the microphone',\n                buttonNegative: 'Cancel',\n                buttonPositive: 'Ok',\n            },\n        );\n        if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n            //////console.log.log.log.log('You can use the camera');\n        } else {\n            //////console.log.log.log.log('Camera permission denied');\n\n            // Works on both iOS and Android\n            Alert.alert(\n                'Sorry',\n                'You can not use the microphone to practice your speaking skills',\n                [\n                    { text: 'Ok' },\n                ],\n                { cancelable: false },\n            );\n\n        }\n    } catch (err) {\n        //////console.log.log.log.warn(err);\n    }\n}\n\nrequest_record_permission();\n\nclass Login extends Component {\n\n    // Options for header bar\n    static navigationOptions = ({ navigation }) => {\n\n        return {\n            // title: \"Ingresar\",\n            header: null,\n            //   headerLeft: null,\n            // headerLeft: <Image \n            //       source={require('../assets/images/JEYBLANCO.png')} \n            //       style = {{width: 50, height: 50}}\n            //     />,\n            // headerStyle: {\n            //   backgroundColor: \"#9669AA\",\n            //   fontWeight: 20,\n            // },\n            headerTintColor: 'black',\n            //   headerTitleStyle: {\n            //     fontSize: 30,\n            //     fontFamily: \"Lobster-Regular\"\n            //   },\n\n        };\n    };\n\n\n    //Constructor\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            user_email: null,\n            password: null,\n            // user_email: \"leo.bravo.rain@gmail.com\",\n            // password: \"123456\",\n            // user_email: \"1andreatapiasalinas@gmail.com\",\n            // password: \"123123\",\n            loading: false,\n        };\n\n        this.login = this.login.bind(this);\n        this.register = this.register.bind(this);\n\n\n    }\n\n    componentDidMount() {\n\n        // // check notifications permmissions\n        // messaging().hasPermission()\n        //     .then(enabled => {\n        //         if (enabled) {\n        //             alert('Yes')\n        //         } else {\n        //             alert('No')\n        //         }\n        //     });\n\n\n\n        // check authentication\n        auth().onAuthStateChanged((user) => {\n\n            if (user) {\n                // User is signed in.\n\n                // update state\n                this.setState({\n                    loading: true,\n                });\n\n                // navigate to user home screen\n                this.props.navigation.push(\"Home_Student\");\n\n                // // it gets the fcmToken from the Firebase SDK,\n                // messaging().getToken()\n                //     .then(fcmToken => {\n                //         if (fcmToken) {\n                //             // user has a device token\n                //             // //////console.log.log.log.log(\"it has token\");\n                //             // alert(fcmToken);\n                //             //////console.log.log.log.log(\"Token: \", fcmToken);\n                //             // update token of user\n                //             firestore().collection('users').doc(user.uid).update({ \n                //                     fcm_token: fcmToken,\n                //                 })       \n                //                 // if ok\n                //                 .then(response => {\n\n                //                     //////console.log.log.log.log(\"Update user fcm token\");\n\n                //                     // navigate to home screen\n                //                     this.props.navigation.push(\"Choose_Contact\");\n\n                //                 })\n\n                //                 // if error\n                //                 .catch((error) => {\n\n                //                     // user message\n                //                     Alert.alert(\n                //                         'Sorry!',\n                //                         'We had a problem, try to open the app again!',\n                //                         [\n                //                             { text: 'I will do it' },\n                //                         ],\n                //                         { cancelable: false },\n                //                     );\n\n                //                     // dislpay error in //////console.log.log.log\n                //                     //////console.log.log.log.log(error);\n\n                //                 });\n\n\n                //         } else {\n                //             // user doesn't have a device token yet\n                //             //////console.log.log.log.log(\"it has not token\");\n\n                //             // // it has not token\n                //             // alert(\"It has not token!\");\n                //             // user message\n                //             Alert.alert(\n                //                 'Sorry!',\n                //                 'We had a problem, try to open the app again!',\n                //                 [\n                //                     { text: 'I will do it' },\n                //                 ],\n                //                 { cancelable: false },\n                //             );\n\n                //             // update state\n                //             this.setState({\n                //                 loading: false,\n                //             });\n\n                //         }\n                //     })\n                //     .catch(error => {\n\n                //         //////console.log.log.log.log(\"error in user authentication: \", error);\n\n                //         // update state\n                //         this.setState({\n                //             loading: false,\n                //         });\n                //     })\n            }\n        });\n    }\n\n    login() {\n\n        //////console.log.log.log.log(\"login\");\n\n        // validate if data is not empty\n        if (this.validate_data_is_not_empty()) {\n\n            this.setState({\n                loading: true,\n            });\n\n            // //////console.log.log.log.log(this);\n            auth().signInWithEmailAndPassword(this.state.user_email.trim(), this.state.password)\n\n                .then(res => {\n\n                    //////console.log.log.log.log(\"user logged!\");\n\n                    // update state\n                    this.setState({\n                        loading: false,\n                    });\n\n                    // navigate to home screen\n                    this.props.navigation.push(\"Home_Student\");\n\n\n                })\n\n                .catch((error) => {\n\n                    // update state\n                    this.setState({\n                        loading: false,\n                    });\n\n                    // Works on both iOS and Android\n                    Alert.alert(\n                        'Ups!',\n                        'The email or password appears to be incorrect. Please try again.',\n                        [\n                            { text: 'I will try again' },\n                        ],\n                        { cancelable: false },\n                    );\n\n\n\n                });\n\n        }\n\n        else {\n            // Works on both iOS and Android\n            Alert.alert(\n                'Information is missing',\n                'It seems you have not entered all the information',\n                [\n                    { text: 'I will try again', onPress: () => { } },\n                ],\n                { cancelable: false },\n            );\n        }\n\n    }\n\n\n    register() {\n\n        //////console.log.log.log.log(\"register\");\n\n        this.props.navigation.push(\"Register\");\n\n    }\n\n    validate_data_is_not_empty() {\n        if (this.state.user_email == null || this.state.password == null) {\n            return false;\n        }\n        return true;\n    }\n\n    // Render method\n    render() {\n\n        const url_image = \"https://wallpaperaccess.com/full/180132.jpg\";\n        // return method\n        return (\n\n            <ImageBackground\n                source={{ uri: url_image }}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                }}\n            >\n\n                <View\n                    style={{\n                        // display: \"flex\",\n                        // flex: 1,\n                        // justifyContent: 'center',\n                        // alignItems: 'center'\n                        flex: 1,\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'space-around',\n                        // backgroundColor: \"red\",\n                        width: \"100%\",\n\n                    }}\n                >\n\n                    {!this.state.loading\n\n                        ?\n\n                        <View\n                            style={{\n                                flex: 1,\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                // backgroundColor: \"orange\",\n                                width: \"100%\",\n                            }}\n                        >\n                            {/* title */}\n                            <Title\n                            >\n                                Language courses\n                                </Title>\n\n\n                            {/* input email  */}\n                            <TextInput\n                                label='Email'\n                                autoCapitalize='none'\n                                onChangeText={text => this.setState({ user_email: text })}\n                                value={this.state.user_email}\n                                style={styles.item}\n                            // containerStyle = {{\n                            //     // backgroundColor: \"red\",\n                            //     width: 200,\n                            //     // color: \"white\",\n                            // }}\n                            />\n\n                            <TextInput\n                                label='Password'\n                                onChangeText={text => this.setState({ password: text })}\n                                autoCapitalize='none'\n                                value={this.state.password}\n                                type=\"password\"\n                                secureTextEntry={true}\n                                style={styles.item}\n                            // containerStyle = {{\n                            //     // backgroundColor: \"red\",\n                            //     // width: 300,\n                            // }}\n                            />\n\n\n                            <Button\n                                mode=\"contained\"\n                                // title = \"Login\"\n                                onPress={() => this.login()}\n                                style={styles.item}\n                            // buttonStyle={[\n                            //     styles.button,\n                            //     {\n                            //         // backgroundColor: \"red\",\n                            //         // display: \"flex\",\n                            //         // flex: 1,\n                            //         // textAlign: \"center\",\n                            //         // height: 80,\n                            //         // width: 300,\n                            //         // width: \"100%\",\n                            //         // justifyContent: 'center',\n                            //     }\n                            // ]}\n                            >\n                                Login\n\n                                </Button>\n\n                            <Button\n                                mode=\"contained\"\n                                // title=\"Sign-up\"\n                                onPress={() => this.register()}\n                                style={styles.item}\n                            // buttonStyle={[\n                            //     styles.button,\n                            //     {\n                            //         backgroundColor: \"green\",\n                            //         // width: 200,\n                            //         // height: \"50%\",\n                            //         // alignSelf: \"center\"\n                            //     }\n                            // ]}\n                            >\n                                Sign-up\n\n                                </Button>\n\n                        </View>\n                        :\n\n                        <ActivityIndicator size=\"large\" />\n\n                    }\n\n                </View>\n            </ImageBackground>\n        );\n\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        width: \"80%\",\n        margin: 3,\n\n    }\n})\n\nexport default withNavigation(Login);"]},"metadata":{},"sourceType":"module"}
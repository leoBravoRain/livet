[{"/home/leo/Desktop/livet/webapp/web-platform/src/index.js":"1","/home/leo/Desktop/livet/webapp/web-platform/src/App.js":"2","/home/leo/Desktop/livet/webapp/web-platform/src/reportWebVitals.js":"3","/home/leo/Desktop/livet/webapp/web-platform/src/libraries/material-ui/theme.js":"4","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/login/login.screen.js":"5","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/loginSocialNetworks/loginSocialNetworks.screen.js":"6","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/postsFromSocialNetworks/postsFromSocialNetworks.screen.js":"7","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/editSNPostToProduct/editSNPostToProduct.screen.js":"8","/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/productsCatalog/productsCatalog.screen.js":"9","/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/productDetails/productDetails.screen.js":"10","/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/saleConfirmation/saleConfirmation.screen.js":"11","/home/leo/Desktop/livet/webapp/web-platform/src/libraries/firebase/firebase.js":"12","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/register/register.screen.js":"13","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/productsToSell/productsToSell.screen.js":"14","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/generalComponents/menuBar.component.js":"15","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/chooseStore/chooseStore.screen.js":"16"},{"size":500,"mtime":1620667269332,"results":"17","hashOfConfig":"18"},{"size":4850,"mtime":1620828636667,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1620667269332,"results":"20","hashOfConfig":"18"},{"size":1341,"mtime":1620668642828,"results":"21","hashOfConfig":"18"},{"size":7136,"mtime":1620762956749,"results":"22","hashOfConfig":"18"},{"size":5184,"mtime":1620755821403,"results":"23","hashOfConfig":"18"},{"size":7829,"mtime":1620765081853,"results":"24","hashOfConfig":"18"},{"size":11288,"mtime":1620829416742,"results":"25","hashOfConfig":"18"},{"size":10148,"mtime":1620827473939,"results":"26","hashOfConfig":"18"},{"size":7327,"mtime":1620828662179,"results":"27","hashOfConfig":"18"},{"size":9551,"mtime":1620829894516,"results":"28","hashOfConfig":"18"},{"size":635,"mtime":1620743664004,"results":"29","hashOfConfig":"18"},{"size":4105,"mtime":1620753599846,"results":"30","hashOfConfig":"18"},{"size":9507,"mtime":1620765217850,"results":"31","hashOfConfig":"18"},{"size":1746,"mtime":1620764858551,"results":"32","hashOfConfig":"18"},{"size":6715,"mtime":1620764772290,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ai0av",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/home/leo/Desktop/livet/webapp/web-platform/src/index.js",[],["72","73"],"/home/leo/Desktop/livet/webapp/web-platform/src/App.js",["74","75","76","77"],"/home/leo/Desktop/livet/webapp/web-platform/src/reportWebVitals.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/libraries/material-ui/theme.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/login/login.screen.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/loginSocialNetworks/loginSocialNetworks.screen.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/postsFromSocialNetworks/postsFromSocialNetworks.screen.js",["78","79"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\nimport { Button } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Modal from '@material-ui/core/Modal';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\n// import Schedule from '@material-ui/icons/Schedule';\n\n// import Select from '@material-ui/core/Select';\n\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import Chip from '@material-ui/core/Chip';\n\n// firebase\nimport { auth } from \"../../../libraries/firebase/firebase\";\n\nimport MenuBar from \"../generalComponents/menuBar.component\";\n\n// prototype post\nconst posts = [\n\n    {\n        \"text\": \"hello this is my first IG post\",\n        \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n    },\n\n    {\n        \"text\": \"This is another IG post\",\n        \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n    },\n];\n\n\nclass PostsFromSocialNetworks extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: false,\n            posts: [],\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            loading: true,\n        });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n            if (user) {\n\n                // // redirect\n                // this.props.history.push('/productsToSell');\n\n                // get posts from IG (filter by store id)\n\n                // update posts\n                this.setState({\n                    posts: posts,\n                    loading: false,\n                });\n\n\n            }\n\n            else {\n\n                // console.log(\"user no logged\");\n\n                this.props.history.push('/login');\n            }\n\n            this.setState({\n                loading: false,\n            });\n\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            <Grid\n                container\n                spacing={3}\n            >\n\n                {/* menu */}\n                <MenuBar\n                    goToSocialNetworkPosts={() => {\n                        this.props.history.push(\"/postsFromSocialNetworks/\" + this.props.match.params.store_id);\n                    }}\n\n                    goToProductsToSell={() => {\n                        this.props.history.push(\"/productsToSell/\" + this.props.match.params.store_id);\n                    }}\n\n                    goToChooseStore={() => {\n                        this.props.history.push(\"/chooseStore\");\n                    }}\n                />\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Grid item xs={12} sm={12}\n                        // style={{ backgroundColor: \"yellow\" }}\n                        >\n\n                            {/* list of posts */}\n                            <Paper\n                                style={{\n                                    padding: 20,\n                                    margin: 10,\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                }}\n\n                                elevation={3}\n                            >\n\n                                {/* title */}\n                                <Typography align=\"center\" variant=\"h4\" component=\"h4\" gutterBottom>\n                                    Posteos desde tu cuenta de Instagram\n                                </Typography>\n\n                                {/* each post */}\n                                {\n                                    this.state.posts.map((post) => {\n\n                                        return(\n\n                                            // each post structure\n                                            <Card>\n                                                <CardActionArea>\n                                                    <CardMedia\n                                                        image={post.image}\n                                                        component=\"img\"\n                                                        alt=\"Contemplative Reptile\"\n                                                        height=\"300\"\n\n                                                    // title={workshop.name}\n                                                    />\n\n                                                    {/* contentn */}\n                                                    <CardContent>\n\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            {post.text}\n                                                        </Typography>\n\n                                                    </CardContent>\n\n                                                </CardActionArea>\n\n\n                                                <CardActions>\n\n                                                    <Button size=\"small\" color=\"primary\"\n                                                        variant=\"contained\"\n                                                        onClick={() => {\n                                                            // window.open(\"https://wa.me/\" + workshop.teacherMobileNumber + \"?text=Hola, quiero tomar una clase en tu curso de '\" + workshop.title + \"' que aparece en la plataforma online\")\n                                                            // this.setState({\n                                                            //     toBuyModal: true,\n                                                            // });\n\n                                                            // alert(\"See details\")\n                                                            this.props.history.push('/editSNPostToProduct/' + this.props.match.params.store_id, {\"post\": post});\n                                                        }}\n                                                    >\n\n                                                        <PlayArrow /> Ver\n\n                                                    </Button>\n\n                                                </CardActions>\n\n                                            </Card>\n                                            \n                                        );\n                                    })\n                                }\n\n                            </Paper>\n\n                        </Grid>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n                {/* </Paper> */}\n            </Grid>\n        );\n\n    }\n\n}\n\nexport default PostsFromSocialNetworks;","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/editSNPostToProduct/editSNPostToProduct.screen.js",["80"],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/productsCatalog/productsCatalog.screen.js",["81","82"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\nimport { Button } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Modal from '@material-ui/core/Modal';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\n// import Schedule from '@material-ui/icons/Schedule';\n\n// import Select from '@material-ui/core/Select';\n\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import Chip from '@material-ui/core/Chip';\n\n// firebase\nimport { fs } from \"../../../libraries/firebase/firebase\";\n\n// // store information prototype\n// const store = {\n//     \"name\":\"Cami cooks\",\n//     \"instagramUrl\": \"https://www.instagram.com/camicooks_/\",\n//     \"profilePhoto\": \"https://instagram.fpuq3-1.fna.fbcdn.net/v/t51.2885-19/s320x320/97950066_1170349686638961_3025539464844804096_n.jpg?tp=1&_nc_ht=instagram.fpuq3-1.fna.fbcdn.net&_nc_ohc=gWikcq9ctcIAX8OQDqp&edm=ABfd0MgBAAAA&ccb=7-4&oh=b94a4bc8d14313227db5ff3db3795d06&oe=60BDCE66&_nc_sid=7bff83\",\n// }\n\n// // prototype post\n// const products = [\n\n//     {\n//         \"name\": \"Panqueques de queso crema\",\n//         \"description\": \"Panqueques hechos con masa integral\",\n//         \"var1\": \"10 unidades\",\n//         \"price\": 4500,\n//         \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n//         \"extraInformation\": \"•Pedidos con al menos 2 días de anticipación \\n •Entrega Concón gratis. •Entrega Reñaca, Jardín del Mar, plan Viña $1.000. •Entrega otros sectores $1000 + cobro extra dependiendo del lugar.\"\n//     },\n\n//     {\n//         \"name\": \"Torta de manjar\",\n//         \"productDescription\": \"Torta hecha con masa integral\",\n//         \"var1\": \"18 cm\",\n//         \"price\": 9500,\n//         \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n//         \"extraInformation\": \"•Pedidos con al menos 2 días de anticipación \\n •Entrega Concón gratis. •Entrega Reñaca, Jardín del Mar, plan Viña $1.000. •Entrega otros sectores $1000 + cobro extra dependiendo del lugar.\"\n//     },\n// ];\n\n\nclass ProductsCatalog extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: true,\n            products: [],\n            store: null,\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            loading: true,\n        });\n\n        // get store data\n        fs.collection(\"stores\").doc(this.props.match.params.store_id).get()\n        .then(doc => {\n\n            // if store exists\n            if(doc.exists) {\n                \n                // get store data\n                var store = doc.data();\n                store[\"id\"] = doc.id;\n                // console.log(store);\n\n                // get store products\n                fs.collection(\"stores\").doc(this.props.match.params.store_id).collection(\"products\").get()\n                    .then(snapshotquery => {\n\n                        // // get data from API\n                        var products = [];\n\n                        // iterate over each item\n                        snapshotquery.forEach(doc => {\n\n                            // console.log(doc.data());\n                            let product = doc.data();\n                            product[\"id\"] = doc.id;\n                            products.push(product);\n\n                        });\n\n                        // update state\n                        this.setState({\n\n                            // update products\n                            products: products,\n                            store: store,\n                            loading: false,\n\n                        });\n                    });\n            }\n        })\n\n    }\n\n    render() {\n\n        return (\n\n            <Grid\n                container\n                spacing={3}\n            >\n\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Grid \n                            item \n                            xs={12} \n                            sm={12}\n                        // style={{ backgroundColor: \"yellow\" }}\n                        >\n\n                            {/* store information */}\n                            <Container>\n\n                                {/* profile photo */}\n                                <img\n                                    src={this.state.store.profilePhoto}\n                                    width=\"100px\"\n                                    height=\"100px\"\n                                />  \n\n                                {/* title */}\n                                <Typography align=\"center\" variant=\"h4\" component=\"h4\" gutterBottom>\n                                    {this.state.store.name}\n                                </Typography>\n\n                                {/* IG link */}\n                                <Typography align=\"center\" variant=\"h6\" component=\"h6\" gutterBottom>\n                                    <a href={this.state.store.instagramUrl}> Instagram </a>\n                                </Typography>\n\n                            </Container>\n\n                            {/* list of products */}\n                            <Paper\n                                style={{\n                                    padding: 20,\n                                    margin: 10,\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                }}\n\n                                elevation={3}\n                            >\n\n                                \n                                {/* each post */}\n                                {\n                                    this.state.products.map((product) => {\n\n                                        return (\n\n                                            // each product structure\n                                            <Card>\n                                                <CardActionArea>\n                                                    <CardMedia\n                                                        image={product.image}\n                                                        component=\"img\"\n                                                        alt=\"Contemplative Reptile\"\n                                                        height=\"300\"\n\n                                                    // title={workshop.name}\n                                                    />\n\n                                                    {/* contentn */}\n                                                    <CardContent>\n\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                            {product.name}\n                                                        </Typography>\n\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            {product.description}\n                                                        </Typography>\n\n                                                    </CardContent>\n\n                                                </CardActionArea>\n\n\n                                                <CardActions>\n\n                                                    <Button size=\"small\" color=\"primary\"\n                                                        variant=\"contained\"\n                                                        onClick={() => {\n                                                            // window.open(\"https://wa.me/\" + workshop.teacherMobileNumber + \"?text=Hola, quiero tomar una clase en tu curso de '\" + workshop.title + \"' que aparece en la plataforma online\")\n                                                            // this.setState({\n                                                            //     toBuyModal: true,\n                                                            // });\n\n                                                            // alert(\"See details\")\n                                                            this.props.history.push('/productDetails/' + this.state.store.id + \"/\" + product.id);\n                                                        }}\n                                                    >\n\n                                                        <PlayArrow /> Ver detalles\n\n                                                    </Button>\n\n                                                </CardActions>\n\n                                            </Card>\n\n                                        );\n                                    })\n                                }\n\n                            </Paper>\n\n                        </Grid>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n                {/* </Paper> */}\n            </Grid>\n        );\n\n    }\n\n}\n\nexport default ProductsCatalog;","/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/productDetails/productDetails.screen.js",["83","84","85"],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/customer/saleConfirmation/saleConfirmation.screen.js",["86"],"/home/leo/Desktop/livet/webapp/web-platform/src/libraries/firebase/firebase.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/register/register.screen.js",[],"/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/productsToSell/productsToSell.screen.js",["87","88","89","90"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\nimport { Button } from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Modal from '@material-ui/core/Modal';\n// import PlayArrow from '@material-ui/icons/PlayArrow';\n// import Schedule from '@material-ui/icons/Schedule';\n\n// import Select from '@material-ui/core/Select';\n\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import Chip from '@material-ui/core/Chip';\n\nimport MenuBar from \"../generalComponents/menuBar.component\";\n\n// firebase\nimport { \n    auth,\n    fs,\n} from \"../../../libraries/firebase/firebase\";\n\n\n// // prototype post\n// const products = [\n\n//     {\n//         \"name\": \"Panqueques de queso crema\",\n//         \"description\": \"Panqueques hechos con masa integral\",\n//         \"var1\": \"10 unidades\",\n//         \"price\": 4500,\n//         \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n//         \"extraInformation\": \"•Pedidos con al menos 2 días de anticipación \\n •Entrega Concón gratis. •Entrega Reñaca, Jardín del Mar, plan Viña $1.000. •Entrega otros sectores $1000 + cobro extra dependiendo del lugar.\"\n//     },\n\n//     {\n//         \"name\": \"Torta de manjar\",\n//         \"productDescription\": \"Torta hecha con masa integral\",\n//         \"var1\": \"18 cm\",\n//         \"price\": 9500,\n//         \"image\": \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/08/1C5A0056.jpg\",\n//         \"extraInformation\": \"•Pedidos con al menos 2 días de anticipación \\n •Entrega Concón gratis. •Entrega Reñaca, Jardín del Mar, plan Viña $1.000. •Entrega otros sectores $1000 + cobro extra dependiendo del lugar.\"\n//     },\n// ];\n\n\nclass ProductsToSell extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: false,\n            products: [],\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            loading: true,\n        });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n            if (user) {\n\n                // redirect\n                // this.props.history.push('/productsToSell');\n                \n                // get products from store\n                fs.collection(\"stores\").doc(this.props.match.params.store_id).collection(\"products\")\n                .get()\n                .then(snapshotquery => {\n\n                    // // get data from API\n                    var products = [];\n\n                    // iterate over each item\n                    snapshotquery.forEach(doc => {\n\n                        // console.log(doc.data());\n                        let product = doc.data();\n                        product[\"id\"] = doc.id;\n                        products.push(product);\n\n                    });\n\n                    // update state\n                    this.setState({\n\n                        // update products\n                        products: products,\n                        loading: false,\n\n                    });\n\n                })\n\n            }\n\n            else {\n\n                // console.log(\"user no logged\");\n\n                this.props.history.push('/login');\n            }\n\n            // this.setState({\n            //     loading: false,\n            // });\n\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            <Grid\n                container\n                spacing={3}\n            >\n                \n                {/* menu */}\n                <MenuBar\n                    goToSocialNetworkPosts = {() => {\n                        this.props.history.push(\"/postsFromSocialNetworks/\" + this.props.match.params.store_id);\n                    }}\n\n                    goToProductsToSell={() => {\n                        this.props.history.push(\"/productsToSell/\" + this.props.match.params.store_id);\n                    }}\n\n                    goToChooseStore = {() => {\n                        this.props.history.push(\"/chooseStore\");\n                    }}\n                />\n\n                {/* list of products */}\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Grid item xs={12} sm={12}\n                        // style={{ backgroundColor: \"yellow\" }}\n                        >\n\n                            {/* list of products */}\n                            <Paper\n                                style={{\n                                    padding: 20,\n                                    margin: 10,\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                }}\n\n                                elevation={3}\n                            >\n\n                                {/* title */}\n                                <Typography align=\"center\" variant=\"h4\" component=\"h4\" gutterBottom>\n                                    Productos a la venta en tu página\n                                </Typography>\n\n                                {/* each post */}\n                                {\n                                    this.state.products.map((product) => {\n\n                                        return (\n\n                                            // each product structure\n                                            <Card>\n                                                <CardActionArea>\n                                                    <CardMedia\n                                                        image={product.image}\n                                                        component=\"img\"\n                                                        alt=\"Contemplative Reptile\"\n                                                        height=\"300\"\n\n                                                    // title={workshop.name}\n                                                    />\n\n                                                    {/* contentn */}\n                                                    <CardContent>\n\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                            {product.name}\n                                                        </Typography>\n\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            {product.description}\n                                                        </Typography>\n\n                                                    </CardContent>\n\n                                                </CardActionArea>\n\n\n                                                {/* <CardActions>\n\n                                                    <Button size=\"small\" color=\"primary\"\n                                                        variant=\"contained\"\n                                                        onClick={() => {\n                                                            // window.open(\"https://wa.me/\" + workshop.teacherMobileNumber + \"?text=Hola, quiero tomar una clase en tu curso de '\" + workshop.title + \"' que aparece en la plataforma online\")\n                                                            // this.setState({\n                                                            //     toBuyModal: true,\n                                                            // });\n\n                                                            // alert(\"See details\")\n                                                            this.props.history.push('/editSNPostToProduct');\n                                                        }}\n                                                    >\n\n                                                        <PlayArrow /> Ver\n\n                                                    </Button>\n\n                                                </CardActions> */}\n\n                                            </Card>\n\n                                        );\n                                    })\n                                }\n\n                            </Paper>\n\n                        </Grid>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n                {/* </Paper> */}\n            </Grid>\n        );\n\n    }\n\n}\n\nexport default ProductsToSell;","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/generalComponents/menuBar.component.js",["91"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\n// import Paper from '@material-ui/core/Paper';\n// import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\nimport { Button } from \"@material-ui/core\";\n// import FormControl from '@material-ui/core/FormControl';\n// import Typography from '@material-ui/core/Typography';\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\n\n// firebase\n// import { auth } from \"../../../libraries/firebase/firebase\";\n\nclass MenuBar extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n    }\n\n    render() {\n\n        return (\n\n            <Grid\n                container\n                spacing={3}\n            >\n\n                {/* choose store */}\n                <Button align=\"center\" variant=\"contained\" color=\"primary\"\n                    onClick={this.props.goToChooseStore}\n                >\n                    Escoger tienda\n                </Button>\n\n                {/* social network posts */}\n                <Button align=\"center\" variant=\"contained\" color=\"primary\"\n                    onClick={this.props.goToSocialNetworkPosts}\n                >\n                    Posteos de IG\n                </Button>\n\n\n                {/* products to sell */}\n                <Button align=\"center\" variant=\"contained\" color=\"primary\"\n                    onClick={this.props.goToProductsToSell}\n                >\n                    Productos en la tienda\n                </Button>\n\n\n            </Grid>\n        );\n\n    }\n\n}\n\nexport default MenuBar;","/home/leo/Desktop/livet/webapp/web-platform/src/screens/owner/chooseStore/chooseStore.screen.js",["92"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\nimport { Button } from \"@material-ui/core\";\n// import FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\n\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Modal from '@material-ui/core/Modal';\n// import PlayArrow from '@material-ui/icons/PlayArrow';\n// import Schedule from '@material-ui/icons/Schedule';\n\n// import Select from '@material-ui/core/Select';\n\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import Chip from '@material-ui/core/Chip';\n\nimport MenuBar from \"../generalComponents/menuBar.component\";\n\n// firebase\nimport {\n    auth,\n    fs,\n} from \"../../../libraries/firebase/firebase\";\n\n\n\nclass ChooseStore extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: false,\n            stores: [],\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            loading: true,\n        });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n            if (user) {\n\n                // redirect\n                // this.props.history.push('/productsToSell');\n\n                // get products from store\n                fs.collection(\"stores\").where(\"ownerId\", \"==\", user.uid)\n                    .get()\n                    .then(snapshotquery => {\n\n                        // get data from API\n                        var stores = [];\n\n                        // iterate over each item\n                        snapshotquery.forEach(doc => {\n\n                            // console.log(doc.data());\n                            let store = doc.data();\n                            store[\"id\"] = doc.id;\n                            stores.push(store);\n\n                        });\n\n                        // update state\n                        this.setState({\n\n                            // update stores\n                            stores: stores,\n                            loading: false,\n\n                        });\n\n                    })\n\n            }\n\n            else {\n\n                // console.log(\"user no logged\");\n\n                this.props.history.push('/login');\n            }\n\n            // this.setState({\n            //     loading: false,\n            // });\n\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            <Grid\n                container\n                spacing={3}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Grid item xs={12} sm={12}\n                        // style={{ backgroundColor: \"yellow\" }}\n                        >\n\n                            {/* list of products */}\n                            <Paper\n                                style={{\n                                    padding: 20,\n                                    margin: 10,\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                }}\n\n                                elevation={3}\n                            >\n\n                                {/* title */}\n                                <Typography align=\"center\" variant=\"h4\" component=\"h4\" gutterBottom>\n                                    Tus tiendas asociadas\n                                </Typography>\n\n                                {/* each post */}\n                                {\n                                    this.state.stores.map((store) => {\n\n                                        return (\n\n                                            <Container\n                                                style = {{\n                                                    display: \"flex\",\n                                                    flexDirection: \"row\",\n                                                }}\n                                            >\n\n                                                {/* store name */}\n                                                <Typography align=\"center\" variant=\"body2\" component=\"p\" gutterBottom onClick = {() => alert(\"oaijsd\")}>\n                                                    {store.name}\n                                                </Typography>\n                                                \n                                                {/* go to */}\n                                                <Button \n                                                    align=\"center\" \n                                                    variant=\"contained\" \n                                                    color=\"primary\" \n                                                    onClick={() => {\n                                                        // console.log('/productsToSell/' + store.id)\n                                                        this.props.history.push('/productsToSell/' + store.id)\n                                                        // this.props.history.push('/postsFromSocialNetworks/' + store.id)\n                                                    }}\n                                                >\n                                                    Ir a la tienda\n                                                </Button>\n                                            </Container>\n\n                                        );\n                                    })\n                                }\n\n                            </Paper>\n\n                        </Grid>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n                {/* </Paper> */}\n            </Grid>\n        );\n\n    }\n\n}\n\nexport default ChooseStore;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":15,"column":8,"nodeType":"99","messageId":"100","endLine":15,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":18,"column":8,"nodeType":"99","messageId":"100","endLine":18,"endColumn":12},{"ruleId":"97","severity":1,"message":"102","line":19,"column":8,"nodeType":"99","messageId":"100","endLine":19,"endColumn":11},{"ruleId":"97","severity":1,"message":"103","line":20,"column":8,"nodeType":"99","messageId":"100","endLine":20,"endColumn":19},{"ruleId":"97","severity":1,"message":"104","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"105","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":209,"column":37,"nodeType":"108","endLine":214,"endColumn":39},{"ruleId":"97","severity":1,"message":"105","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":158,"column":33,"nodeType":"108","endLine":162,"endColumn":35},{"ruleId":"97","severity":1,"message":"111","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":17},{"ruleId":"97","severity":1,"message":"105","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":136,"column":37,"nodeType":"108","endLine":141,"endColumn":39},{"ruleId":"97","severity":1,"message":"104","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":16},{"ruleId":"97","severity":1,"message":"105","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":19},{"ruleId":"97","severity":1,"message":"112","line":17,"column":8,"nodeType":"99","messageId":"100","endLine":17,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":21,"column":5,"nodeType":"115","messageId":"116","endLine":26,"endColumn":6},{"ruleId":"97","severity":1,"message":"117","line":32,"column":8,"nodeType":"99","messageId":"100","endLine":32,"endColumn":15},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Info' is defined but never used.","'Add' is defined but never used.","'MailOutline' is defined but never used.","'Container' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'TextField' is defined but never used.","'CardActions' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MenuBar' is defined but never used.","no-global-assign","no-unsafe-negation"]